# Generated by Django 3.2.6 on 2021-09-27 14:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Wish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_anonymos_user', models.BooleanField(default=False, verbose_name='Для анонімних користувачів')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Власник')),
            ],
            options={
                'verbose_name': 'Список бажаних товарів',
                'verbose_name_plural': 'Списки бажаних товарів',
            },
        ),
        migrations.CreateModel(
            name='WishProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Покупець')),
                ('wish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_wishproducts', to='wish.wish', verbose_name='Список бажаних товарів')),
            ],
            options={
                'verbose_name': 'Бажаний товар',
                'verbose_name_plural': 'Бажані товари',
            },
        ),
        migrations.AddField(
            model_name='wish',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='related_wish', to='wish.WishProduct', verbose_name='Продукти'),
        ),
    ]
